// <auto-generated />
using DATA.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace DATA.Migrations
{
    [DbContext(typeof(LapDbContext))]
    partial class LapDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DATA.Entity.Battery", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Parameter")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.ToTable("Batteries");
                });

            modelBuilder.Entity("DATA.Entity.Category", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DATA.Entity.Laptop", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("CategoryID")
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("IdCat")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("IdProducer")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("producerID")
                        .HasColumnType("NVARCHAR2(30)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("producerID");

                    b.ToTable("Laptops");
                });

            modelBuilder.Entity("DATA.Entity.Laptop_Detail", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("BatteryID")
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<decimal>("COGS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("Hight")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("IdBattery")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("IdCam")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("IdLap")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("IdMain")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("IdRam")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("IdSSD")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("IdScren")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("IdVga")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("LaptopID")
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("MainID")
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("Quatity")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("RamID")
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("SSDID")
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("ScreenID")
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Seri")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("VGAID")
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("WebcamID")
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("leght")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.HasKey("ID");

                    b.HasIndex("BatteryID");

                    b.HasIndex("LaptopID");

                    b.HasIndex("MainID");

                    b.HasIndex("RamID");

                    b.HasIndex("SSDID");

                    b.HasIndex("ScreenID");

                    b.HasIndex("VGAID");

                    b.HasIndex("WebcamID");

                    b.ToTable("laptop_Details");
                });

            modelBuilder.Entity("DATA.Entity.Main", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Parameter")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.ToTable("Mains");
                });

            modelBuilder.Entity("DATA.Entity.Producer", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("DATA.Entity.Ram", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Parameter")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.ToTable("Rams");
                });

            modelBuilder.Entity("DATA.Entity.Screen", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.ToTable("Screens");
                });

            modelBuilder.Entity("DATA.Entity.SSD", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Parameter")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.ToTable("SSDs");
                });

            modelBuilder.Entity("DATA.Entity.VGA", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Parameter")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.ToTable("VGAs");
                });

            modelBuilder.Entity("DATA.Entity.Webcam", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Parameter")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.ToTable("Webcams");
                });

            modelBuilder.Entity("DATA.Entity.Laptop", b =>
                {
                    b.HasOne("DATA.Entity.Category", "Category")
                        .WithMany("Laptop")
                        .HasForeignKey("CategoryID");

                    b.HasOne("DATA.Entity.Producer", "producer")
                        .WithMany("Laptop")
                        .HasForeignKey("producerID");

                    b.Navigation("Category");

                    b.Navigation("producer");
                });

            modelBuilder.Entity("DATA.Entity.Laptop_Detail", b =>
                {
                    b.HasOne("DATA.Entity.Battery", "Battery")
                        .WithMany("Laptop_Detail")
                        .HasForeignKey("BatteryID");

                    b.HasOne("DATA.Entity.Laptop", "Laptop")
                        .WithMany("Laptop_Detail")
                        .HasForeignKey("LaptopID");

                    b.HasOne("DATA.Entity.Main", "Main")
                        .WithMany("Laptop_Detail")
                        .HasForeignKey("MainID");

                    b.HasOne("DATA.Entity.Ram", "Ram")
                        .WithMany("Laptop_Detail")
                        .HasForeignKey("RamID");

                    b.HasOne("DATA.Entity.SSD", "SSD")
                        .WithMany("Laptop_Detail")
                        .HasForeignKey("SSDID");

                    b.HasOne("DATA.Entity.Screen", "Screen")
                        .WithMany("Laptop_Detail")
                        .HasForeignKey("ScreenID");

                    b.HasOne("DATA.Entity.VGA", "VGA")
                        .WithMany("Laptop_Detail")
                        .HasForeignKey("VGAID");

                    b.HasOne("DATA.Entity.Webcam", "Webcam")
                        .WithMany("Laptop_Detail")
                        .HasForeignKey("WebcamID");

                    b.Navigation("Battery");

                    b.Navigation("Laptop");

                    b.Navigation("Main");

                    b.Navigation("Ram");

                    b.Navigation("SSD");

                    b.Navigation("Screen");

                    b.Navigation("VGA");

                    b.Navigation("Webcam");
                });

            modelBuilder.Entity("DATA.Entity.Battery", b =>
                {
                    b.Navigation("Laptop_Detail");
                });

            modelBuilder.Entity("DATA.Entity.Category", b =>
                {
                    b.Navigation("Laptop");
                });

            modelBuilder.Entity("DATA.Entity.Laptop", b =>
                {
                    b.Navigation("Laptop_Detail");
                });

            modelBuilder.Entity("DATA.Entity.Main", b =>
                {
                    b.Navigation("Laptop_Detail");
                });

            modelBuilder.Entity("DATA.Entity.Producer", b =>
                {
                    b.Navigation("Laptop");
                });

            modelBuilder.Entity("DATA.Entity.Ram", b =>
                {
                    b.Navigation("Laptop_Detail");
                });

            modelBuilder.Entity("DATA.Entity.Screen", b =>
                {
                    b.Navigation("Laptop_Detail");
                });

            modelBuilder.Entity("DATA.Entity.SSD", b =>
                {
                    b.Navigation("Laptop_Detail");
                });

            modelBuilder.Entity("DATA.Entity.VGA", b =>
                {
                    b.Navigation("Laptop_Detail");
                });

            modelBuilder.Entity("DATA.Entity.Webcam", b =>
                {
                    b.Navigation("Laptop_Detail");
                });
#pragma warning restore 612, 618
        }
    }
}
